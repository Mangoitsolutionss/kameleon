## scope selectors
# goals is to provide abstraction above xpath / css selectors for common areas of application
# * parts of page
#   * on (top|left|bottom|right)
#   * in main menu, footer
# * tables sectors
#   * within row that contains sth
# * default area (i.e without menus, columns and footer)


## verification that action complete with desirable state in app
# goals is to distinct what user see from what browser see in the source
# * see sth that is visible for user
#   * as text ( regex, string )
#   * as value in field { hash of pairs field (id|name), value }
#   * elements in proper order
# * send in email (emails should be attached per user - mailbox)
#
# * see in the source code (in debug mode)
#

## Interactions with applications
# * clicking
# * visiting
# * drag and drop
# * fill_in forms
#   * including rich text ('textarea', 'ckeditor', '')
#   * all type of inputs ('text', 'password', 'email', 'checkbox', 'radio', 'file', 'select', 'multi-select')
# * handling tricky testing parts in better manner
#   * popups
#   * frames / windows
#   * native windows (like confirmations)
# * support for common ui components
#   * jquery ui
#     * calendars
#     * sliders
#     * ...
#   * colorbox // other modalboxes
#   *
# * all browser simulation handlers
#   * ... go back etc
# * all mouse and keyboard simulation
#   * hover over
# * using javascript (might be as debug mode)
#   * to trigger events that are hard to imitate
# * testing visibility of element (debug mode)


## user object
# * is ruby object with info about
#   * session
#   * user in system that he is (including not encrypted password)
#   * can perform many actions in will { ... }
#   * can login/logout
# * customization (specific classes for specific types of users)
#   * roles
#   * methods for setuping certain state of account (must to work well with factories and support bulk update to speed up things)


## handle somehow guest type of account


##  sessions (from browsers point)
#   * be default share the same sessions
#   * is possible that they have exclusive session ( when testing multiuser interactions)


## shared examples that are skeleton for testing
# * pagination
# * sorting
# * ...


## i18n support
# using keys other that labels

## shortcuts to abstract some internal elements
# long class names, constants etc
